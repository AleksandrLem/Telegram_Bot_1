from aiogram.types import (ReplyKeyboardMarkup, KeyboardButton,
                            ReplyKeyboardRemove, KeyboardButtonPollType)
from aiogram.utils.keyboard import ReplyKeyboardBuilder


start_kbd = ReplyKeyboardMarkup(
    keyboard=[
        [
        KeyboardButton(text='–ö–Ω–æ–ø–∫–∞_1'),
        KeyboardButton(text='–ö–Ω–æ–ø–∫–∞_2'),
        ],
        [
        KeyboardButton(text='–ö–Ω–æ–ø–∫–∞_3'),
        KeyboardButton(text='–ö–Ω–æ–ø–∫–∞_4'),
        ]
    ],
    resize_keyboard=True,
    input_field_placeholder='–∂–º—è–∫–Ω–∏ –∫–Ω–æ–ø–∫—É'
)

del_kbd = ReplyKeyboardRemove()

# —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –ø–æ–º–æ—â—å—é –±–∏–ª–¥–µ—Ä–∞
start_kbd2 = ReplyKeyboardBuilder() # —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä

# –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
start_kbd2.add(
    KeyboardButton(text='–ö–Ω–æ–ø–∫–∞_11'),
    KeyboardButton(text='–ö–Ω–æ–ø–∫–∞_12'),
    KeyboardButton(text='–ö–Ω–æ–ø–∫–∞_13'),
    KeyboardButton(text='–ö–Ω–æ–ø–∫–∞_14'),
)

# –¥–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
start_kbd2.adjust(2, 2) # –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—É, –¥–≤–∞ —Ä—è–¥–∞
# start_kbd2.adjust(2, 1, 1) –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –≤ –ø–µ—Ä–≤–æ–º —Ä—è–¥—É, –æ–¥–Ω–∞ –≤–æ –≤—Ç–æ—Ä–æ–º, –æ–¥–Ω–∞ –≤ —Ç—Ä–µ—Ç—å–µ–º

# –µ—Å–ª–∏ –∫ –∫–ª–∞–≤–∏–∞—É—Ä–µ start_kbd2 –º—ã —Ö–æ—Ç–∏–º –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –ø–∞—Ä—É –∫–Ω–æ–ø–æ–∫, –Ω–æ
# –Ω–µ —Ö–æ—Ç–∏–º –∑–∞–Ω–æ–≤–æ –ø—Ä–æ–ø–∏—Å—ã–≤–∞—Ç—å –∏—Ö –≤ –Ω–æ–≤–æ–º —ç–∫–∑–µ–º–ø–ª—è—Ä–µ, —Ç–æ –¥–µ–ª–∞–µ–º —Ç–∞–∫
start_kbd3 = ReplyKeyboardBuilder()
start_kbd3.attach(start_kbd2) # –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É start_kbd2
# –º–µ—Ç–æ–¥ row –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –≤ –Ω–æ–≤–æ–º —Ä—è–¥—É
start_kbd3.row(
    KeyboardButton(text='–ö–Ω–æ–ø–∫–∞_15'),
    KeyboardButton(text='–ö–Ω–æ–ø–∫–∞_16'),
    KeyboardButton(text='–ö–Ω–æ–ø–∫–∞_17'),
)


# —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –≥–¥–µ –º–æ–∂–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –ª–∞–∫–∞—Ü–∏—é –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å

kbd_location_phone = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text='–°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å', request_poll=KeyboardButtonPollType()),
        ],
        [
            KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚òéÔ∏è', request_contact=True),
            KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é üó∫Ô∏è', request_location=True),
        ],
    ],
    resize_keyboard=True,
)

# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ –±—É–¥–µ—Ç
# –ø—Ä–∏–º–µ–Ω—è—Ç—å –≤ –ª—é–±–æ–º —Ö–µ–Ω–¥–ª–µ—Ä–µ
'''
    Parameters request_contact and request_location must be as indexes
    of btns args for buttons you need.
    Example:
    get_keyboard(
            "–ú–µ–Ω—é",
            "–û –º–∞–≥–∞–∑–∏–Ω–µ",
            "–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã",
            "–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏",
            "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
            placeholder="–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
            request_contact=4, —ç—Ç–æ –∏–Ω–¥–µ–∫—Å –∫–Ω–æ–ø–∫–∏, –≥–¥–µ 4 —ç—Ç–æ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
            sizes=(2, 2, 1)
                )
'''
def get_keyboard(
        *btns: str,
        placeholder: str = None,
        request_contact: int = None,
        request_location: int = None,
        sizes: tuple[int] = (2,),
                ):
        keyboard = ReplyKeyboardBuilder()

        for index, text in enumerate(btns, start=0):
            if request_contact and request_contact == index:
                keyboard.add(KeyboardButton(text=text, request_contact=True))

            elif request_location and request_location == index:
                keyboard.add(KeyboardButton(text=text, request_location=True))

            else:
                keyboard.add(KeyboardButton(text=text))

        return keyboard.adjust(*sizes).as_markup(
            resize_keyboard=True, input_field_placeholder=placeholder)
