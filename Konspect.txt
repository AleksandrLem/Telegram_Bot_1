https://api.telegram.org/bot<token>/METHOD_NAME - набираем в браузере, вернет ответ в json формате

source bot_venv/Scripts/activate - для git_bash активация виртуального окружения
git --version - проверка версии git
git init - иницаализация git (нужно находиться в корне проекта)
git -h - справка по командам
git config --list - данные конфигурации git
git status - состояние файлов на дынный момент
git add <имя_файла> - добавляем файл в индекс
git rm --cached <файл> - удаляем файл из индекса
git read-tree --empty - удаляем все файлы из индекса
git commit -m "<комментарий к коммиту>" - фиксируем текущее состояние
git push origin main - отправляем commit на git_hub
git show <number> - инфа по номеру коммита, например, git show 17742b2

Глабальные настройки пользователя

git config --global user.name "Mikhail Kryzhanovskiy"
git config --global user.email "kms101@yandex.ru"


Git Hub
уже созданные локальные и удаленные хранилица связываем так:
git remote add произвольное-имя url-хранилища

чтобы просмотреть список имён уже привязанных хранилищ,
git remote show

сначала заходим в папку, куда будем клонировать репозиториз из github
git clone <ссылка_на_репозиторий>

заходим в папку с уже клонированным репозиторием, вводим команду
git remote -v - покажет две ссылки на репозиторий (http or ssh)
git remote set-url origin <ссылка_на_репозиторий_для_доступа_по_ssh>

git push origin main - отправляем commit на git_hub
git push main master - это сработало, когда была ошибка

Команды для выполнения обновлений с git_hub
git fetch
git merge
Вместо двух команд выше можно использовать одну:
git pull
git pull <remote> <branch> - или так, где <remote> - <удаленный> репозиторий
<branch> - ветвь

КОГДА ОШИБКИ

Нет ветки master, вот и ругается. Ветка по умолчанию на GitHub теперь называется main.

Команда git branch -vv покажет какие ветки есть локально и с какими внешними ветками связаны.
* main 0e02250 [origin/main] v.01

Надо было делать git push origin main
Либо просто git push т. е. отправить текущую ветку в связанную с ней ветку на внешнем репозитории.
В нашем случае текущая ветка main (помеченная звёздочкой)
отслеживает исходную ветку main в репозитории обозначенном как origin

Что скрывается за сокращением origin покажет команда git remote -v
origin	https://github.com/xxx/xxx.git (fetch)
origin	https://github.com/xxx/xxx.git (push)